import random

def is_prime_mr(n, k=5):
    """
    Тест Миллера-Рабина для проверки простоты числа n.

    Как работает:
    - Представляем n-1 в виде 2^r * d, где d нечётно.
    - Выбираем случайное основание a и проверяем условия для вероятной простоты.
    - Повторяем k раз для надёжности.
    
    Параметры:
    - n: число для проверки.
    - k: количество повторений теста (чем больше, тем точнее).
    
    Возвращает:
    - True, если число вероятно простое.
    - False, если число точно составное.

    Особенности:
    - Быстрее и надёжнее теста Ферма.
    """

    if n == 2 or n == 3:
        return True
    if n % 2 == 0 or n < 2:
        return False

    # Представим n-1 как 2^r * d (d нечётно)
    r, d = 0, n - 1
    while d % 2 == 0:
        r += 1
        d //= 2

    for _ in range(k):
        a = random.randrange(2, n - 1)
        x = pow(a, d, n) # эквивалентно a^d (mod n)
        if x == 1 or x == n - 1:
            continue
        for _ in range(r - 1):
            x = pow(x, 2, n)
            if x == n - 1:
                break
        else:
            return False
    return True

# Пример:
print("Является ли 99 простым? Ответ:", is_prime_mr(99))    # False
print("Проверка 561:", is_prime_mr(561))                    # False
print("Проверка 101:", is_prime_mr(101))                    # True

input()  # Чтобы программа не закрывалась сразу
